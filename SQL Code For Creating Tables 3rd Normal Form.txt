CREATE DATABASE IF NOT EXISTS dating_app_db;
USE dating_app_db;
CREATE TABLE IF NOT EXISTS  survey_tb(survey_ID INTEGER AUTO_INCREMENT PRIMARY KEY, surveyTopic TINYTEXT);
CREATE TABLE IF NOT EXISTS  questions_tb(question_ID INTEGER AUTO_INCREMENT PRIMARY KEY, questionNumber INTEGER, questionText TEXT, fk_survey_ID, FOREIGN KEY (fk_survey_ID) REFERENCES survey_tb(survey_ID));
CREATE TABLE IF NOT EXISTS  questions_survey_link_tb(fk_question_ID INTEGER PRIMARY KEY, fk_survey_ID INTEGER, FOREIGN KEY (fk_question_ID) REFERENCES questions_tb(question_ID), FOREIGN KEY (fk_survey_ID) REFERENCES survey_tb(survey_ID));
CREATE TABLE IF NOT EXISTS  answers_tb(answer_ID INTEGER AUTO_INCREMENT PRIMARY KEY, answer TEXT, responseType TINYTEXT);
CREATE TABLE IF NOT EXISTS  contact_details_tb(contact_ID INTEGER AUTO_INCREMENT PRIMARY KEY, phoneNumber, emailAddress);
CREATE TABLE IF NOT EXISTS  profile_tb(profile_ID INTEGER AUTO_INCREMENT PRIMARY KEY, bio_ID);
CREATE TABLE IF NOT EXISTS  users_tb(user_ID INTEGER AUTO_INCREMENT PRIMARY KEY, username TINYTEXT, firstname TINYTEXT, hashedPassword VARCHAR(255), surname TINYTEXT, dateOfBirth DATETIME, fk_address_ID INTEGER, fk_contact_ID INTEGER, fk_profile_ID INTEGER, FOREIGN KEY (fk_address_ID) REFERENCES addresses_tb(address_ID), FOREIGN KEY (fk_contact_ID) REFERENCES contact_details_tb(contact_ID), FOREIGN KEY (fk_profile_ID) REFERENCES profile_tb(profile_ID));
CREATE TABLE IF NOT EXISTS  admins_tb(fk_user_ID INTEGER PRIMARY KEY, clearanceLevel INTEGER, FOREIGN KEY (fk_user_ID) REFERENCES users_tb(user_ID));
CREATE TABLE IF NOT EXISTS  biography_tb(bio_ID INTEGER AUTO_INCREMENT PRIMARY KEY, bio TEXT);
CREATE TABLE IF NOT EXISTS  photos_tb(image_ID INTEGER AUTO_INCREMENT PRIMARY KEY, image BLOB);
CREATE TABLE IF NOT EXISTS  images_profile_link_tb(fk_image_ID INTEGER PRIMARY KEY, fk_profile_ID INTEGER, FOREIGN KEY (fk_image_ID) REFERENCES photos_tb(image_ID), FOREIGN KEY (fk_profile_ID) REFERENCES profile_tb(profile_ID));
CREATE TABLE IF NOT EXISTS  addresses_tb(address_ID INTEGER AUTO_INCREMENT PRIMARY KEY, town TEXT, postcode TINYTEXT, streetName TINYTEXT, houseName TINYTEXT);
CREATE TABLE IF NOT EXISTS  responses_tb(response_ID INTEGER AUTO_INCREMENT PRIMARY KEY, fk_answer_ID, response TINYTEXT, FOREIGN KEY (fk_answer_ID) REFERENCES answers_tb(answer_ID));
CREATE TABLE IF NOT EXISTS  responses_users_link_tb(fk_response_ID, fk_user_ID, FOREIGN KEY (fk_response_ID) REFERENCES responses_tb(response_ID), FOREIGN KEY (fk_user_ID) REFERENCES users_tb(user_ID));
CREATE TABLE IF NOT EXISTS  matches_tb(match_ID INTEGER AUTO_INCREMENT PRIMARY KEY, fk_user1_ID INTEGER, fk_user2_ID INTEGER, user1Responded BOOL, user2Responded BOOL, FOREIGN KEY (fk_user1_ID) REFERENCES users_tb(user_ID), FOREIGN KEY (fk_user2_ID) REFERENCES users_tb(user_ID))
CREATE TABLE IF NOT EXISTS  difficulty_level_tb(fk_survey_ID INTEGER PRIMARY KEY, difficultyLevel INTEGER, FOREIGN KEY (fk_survey_ID) REFERENCES survey_tb(survey_ID));
CREATE TABLE IF NOT EXISTS  social_media_links_tb(social_media_link_ID INTEGER AUTO_INCREMENT PRIMARY KEY, fk_user_ID INTEGER, socialMediaLink TEXT, FOREIGN KEY (fk_user_ID) REFERENCES users_tb(user_ID))